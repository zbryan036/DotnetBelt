// <auto-generated />
using System;
using DotnetBelt.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotnetBelt.Migrations
{
    [DbContext(typeof(BeltContext))]
    partial class BeltContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DotnetBelt.Models.Occurrence", b =>
                {
                    b.Property<int>("OccurrenceId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CreatorUserId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Duration");

                    b.Property<string>("DurationUnit")
                        .IsRequired();

                    b.Property<DateTime>("OTime");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("OccurrenceId");

                    b.HasIndex("CreatorUserId");

                    b.ToTable("Occurrences");
                });

            modelBuilder.Entity("DotnetBelt.Models.Plan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("OccurrenceId");

                    b.Property<int>("UserId");

                    b.HasKey("PlanId");

                    b.HasIndex("OccurrenceId");

                    b.HasIndex("UserId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("DotnetBelt.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DotnetBelt.Models.Occurrence", b =>
                {
                    b.HasOne("DotnetBelt.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");
                });

            modelBuilder.Entity("DotnetBelt.Models.Plan", b =>
                {
                    b.HasOne("DotnetBelt.Models.Occurrence", "O")
                        .WithMany("Plans")
                        .HasForeignKey("OccurrenceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DotnetBelt.Models.User", "U")
                        .WithMany("Plans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
